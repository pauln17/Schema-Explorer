// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(cuid())
  email        String       @unique
  name         String?
  passwordHash String
  role         Role         @default(USER)
  repository   Repository[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Repository {
  id     Int     @id @default(autoincrement())
  user   User    @relation(fields: [userId], references: [id])
  userId String
  table  Table[]
}

model Table {
  id           Int                @id @default(autoincrement())
  repository   Repository         @relation(fields: [repositoryId], references: [id])
  repositoryId Int
  column       Column[]
}

model Column {
  id      Int   @id @default(autoincrement())
  table   Table @relation(fields: [tableId], references: [id])
  tableId Int

  // A relation is specified because there are two instances of ColumnReferences[] -- one for outgoing, one for incoming
  outgoingReferences ColumnReferences[] @relation("SourceColumn") // Points to other columns
  incomingReferences ColumnReferences[] @relation("TargetColumn") // Other columns can point here to reference
}

model ColumnReferences {
  id             Int    @id @default(autoincrement())
  sourceColumn   Column @relation("SourceColumn", fields: [sourceColumnId], references: [id]) // The source column that is being "referenced" by another column
  sourceColumnId Int
  targetColumn   Column @relation("TargetColumn", fields: [targetColumnId], references: [id]) // The target column that is referencing a column of the target table
  targetColumnId Int
}

enum Role {
  USER
  ADMIN
}
